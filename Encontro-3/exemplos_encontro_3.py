# EXEMPLOS DE C√ìDIGO - ENCONTRO 3
# Operadores aritm√©ticos, compara√ß√£o e l√≥gicos

"""
Exemplos prontos para demonstra√ß√£o em aula
Cada exemplo pode ser executado independentemente
"""

print("=== EXEMPLOS DE C√ìDIGO - ENCONTRO 3 ===")
print()

# ==========================================
# EXEMPLO 1: OPERADORES ARITM√âTICOS B√ÅSICOS
# ==========================================
print("EXEMPLO 1: Operadores Aritm√©ticos")
print("=" * 40)

a, b = 15, 4
print(f"N√∫meros: a = {a}, b = {b}")
print()

print("=== TODOS OS OPERADORES ARITM√âTICOS ===")
print(f"{a} + {b} = {a + b}")      # 19
print(f"{a} - {b} = {a - b}")      # 11  
print(f"{a} * {b} = {a * b}")      # 60
print(f"{a} / {b} = {a / b}")      # 3.75 (divis√£o real)
print(f"{a} // {b} = {a // b}")    # 3 (divis√£o inteira)
print(f"{a} % {b} = {a % b}")      # 3 (resto)
print(f"{a} ** {b} = {a ** b}")    # 50625 (pot√™ncia)

print(f"\nüí° Observe que:")
print(f"- / sempre resulta em float: {type(a / b)}")
print(f"- // descarta decimais: {a / b} ‚Üí {a // b}")
print(f"- % √∫til para detectar m√∫ltiplos: 15 √© m√∫ltiplo de 4? {a % b == 0}")

print("\n" + "-" * 60)

# ==========================================
# EXEMPLO 2: OPERADORES DE COMPARA√á√ÉO  
# ==========================================
print("\nEXEMPLO 2: Operadores de Compara√ß√£o")
print("=" * 40)

idade1, idade2 = 25, 18
print(f"Idades: {idade1} e {idade2}")
print()

print("=== COMPARA√á√ïES B√ÅSICAS ===")
print(f"{idade1} == {idade2} : {idade1 == idade2}")  # False
print(f"{idade1} != {idade2} : {idade1 != idade2}")  # True
print(f"{idade1} > {idade2}  : {idade1 > idade2}")   # True
print(f"{idade1} < {idade2}  : {idade1 < idade2}")   # False
print(f"{idade1} >= 18 : {idade1 >= 18}")            # True
print(f"{idade2} <= 25 : {idade2 <= 25}")            # True

# Compara√ß√µes encadeadas (Python permite!)
print(f"\n=== COMPARA√á√ïES ENCADEADAS ===")
print(f"18 <= {idade1} <= 65 : {18 <= idade1 <= 65}")
print(f"0 <= {idade2} < 18 : {0 <= idade2 < 18}")

print(f"\nüí° Resultado das compara√ß√µes:")
print(f"- Sempre boolean: {type(idade1 > idade2)}")
print(f"- √ötil para valida√ß√µes e condi√ß√µes")

print("\n" + "-" * 60)

# ==========================================
# EXEMPLO 3: OPERADORES L√ìGICOS FUNDAMENTAIS
# ==========================================
print("\nEXEMPLO 3: Operadores L√≥gicos")
print("=" * 35)

tem_idade = True
tem_documento = False
tem_experiencia = True

print(f"Dados: idade={tem_idade}, documento={tem_documento}, experi√™ncia={tem_experiencia}")
print()

print("=== OPERADORES L√ìGICOS ===")
print(f"tem_idade and tem_documento : {tem_idade and tem_documento}")
print(f"tem_idade or tem_documento  : {tem_idade or tem_documento}")
print(f"not tem_documento           : {not tem_documento}")

# Combina√ß√µes mais complexas
print(f"\n=== COMBINA√á√ïES COMPLEXAS ===")
pode_trabalhar = tem_idade and (tem_documento or tem_experiencia)
situacao_ideal = tem_idade and tem_documento and tem_experiencia
precisa_melhorar = not (tem_documento and tem_experiencia)

print(f"Pode trabalhar: {pode_trabalhar}")
print(f"Situa√ß√£o ideal: {situacao_ideal}")
print(f"Precisa melhorar: {precisa_melhorar}")

print(f"\nüí° Preced√™ncia: not > and > or")
print(f"Use par√™nteses para clareza!")

print("\n" + "-" * 60)

# ==========================================
# EXEMPLO 4: TABELA-VERDADE INTERATIVA
# ==========================================
print("\nEXEMPLO 4: Tabela-Verdade Completa")
print("=" * 40)

# Testando todas as combina√ß√µes
valores = [(True, True), (True, False), (False, True), (False, False)]

print("A     | B     | A and B | A or B | not A | not B")
print("------|-------|---------|--------|-------|-------")

for a, b in valores:
    print(f"{str(a):5} | {str(b):5} | {str(a and b):7} | {str(a or b):6} | {str(not a):5} | {str(not b):5}")

print(f"\nüí° Padr√µes importantes:")
print(f"- AND s√≥ √© True quando AMBOS s√£o True")
print(f"- OR s√≥ √© False quando AMBOS s√£o False")  
print(f"- NOT sempre inverte o valor")

print("\n" + "-" * 60)

# ==========================================
# EXEMPLO 5: PRECED√äNCIA DE OPERADORES
# ==========================================
print("\nEXEMPLO 5: Preced√™ncia de Operadores")
print("=" * 40)

print("=== TESTANDO PRECED√äNCIA ===")
resultado1 = 2 + 3 * 4
resultado2 = (2 + 3) * 4
resultado3 = 2 ** 3 ** 2  # Associativo √† direita!
resultado4 = (2 ** 3) ** 2

print(f"2 + 3 * 4 = {resultado1} (multiplica√ß√£o primeiro)")
print(f"(2 + 3) * 4 = {resultado2} (par√™nteses alteram)")
print(f"2 ** 3 ** 2 = {resultado3} (pot√™ncia: direita‚Üíesquerda)")
print(f"(2 ** 3) ** 2 = {resultado4} (for√ßando ordem)")

# Exemplo com l√≥gicos
print(f"\n=== PRECED√äNCIA COM L√ìGICOS ===")
x, y, z = True, False, True
resultado5 = not x and y or z
resultado6 = not (x and y) or z
resultado7 = not x and (y or z)

print(f"not True and False or True = {resultado5}")
print(f"not (True and False) or True = {resultado6}")
print(f"not True and (False or True) = {resultado7}")

print(f"\nüí° Ordem: ** ‚Üí *, /, %, // ‚Üí +, - ‚Üí compara√ß√£o ‚Üí not ‚Üí and ‚Üí or")

print("\n" + "-" * 60)

# ==========================================
# EXEMPLO 6: VALIDA√á√ÉO PR√ÅTICA COM OPERADORES
# ==========================================
print("\nEXEMPLO 6: Sistema de Valida√ß√£o")
print("=" * 35)

# Simulando dados de entrada
nome = "Jo√£o"
idade = 22
salario = 3500.0
tem_diploma = True
anos_experiencia = 3

print(f"Candidato: {nome}, {idade} anos, R${salario}, diploma: {tem_diploma}, {anos_experiencia} anos exp.")
print()

# Valida√ß√µes usando operadores
nome_ok = len(nome) >= 2 and len(nome) <= 50
idade_ok = 18 <= idade <= 65
salario_ok = salario > 0
experiencia_ok = anos_experiencia >= 0

# Crit√©rios usando l√≥gicos
idade_ideal = 25 <= idade <= 45
salario_compativel = 2000 <= salario <= 10000
perfil_junior = not tem_diploma and anos_experiencia <= 2
perfil_senior = tem_diploma and anos_experiencia >= 5
perfil_pleno = not perfil_junior and not perfil_senior

print("=== VALIDA√á√ïES B√ÅSICAS ===")
print(f"Nome v√°lido: {nome_ok}")
print(f"Idade v√°lida: {idade_ok}")
print(f"Sal√°rio v√°lido: {salario_ok}")
print(f"Experi√™ncia v√°lida: {experiencia_ok}")

dados_validos = nome_ok and idade_ok and salario_ok and experiencia_ok
print(f"Todos os dados OK: {dados_validos}")

print(f"\n=== AN√ÅLISE DE PERFIL ===")
print(f"Idade ideal (25-45): {idade_ideal}")
print(f"Sal√°rio compat√≠vel: {salario_compativel}")
print(f"Perfil junior: {perfil_junior}")
print(f"Perfil pleno: {perfil_pleno}")
print(f"Perfil senior: {perfil_senior}")

# Decis√£o final
aprovado = dados_validos and (perfil_junior or perfil_pleno or perfil_senior)
print(f"\nDECIS√ÉO FINAL: {'‚úÖ APROVADO' if aprovado else '‚ùå REJEITADO'}")

print("\n" + "-" * 60)

# ==========================================
# EXEMPLO 7: N√öMEROS - AN√ÅLISE COMPLETA
# ==========================================
print("\nEXEMPLO 7: Analisador de N√∫meros")
print("=" * 35)

numero = 42

print(f"Analisando o n√∫mero: {numero}")
print()

# An√°lises b√°sicas
eh_positivo = numero > 0
eh_negativo = numero < 0
eh_zero = numero == 0
eh_par = numero % 2 == 0
eh_impar = not eh_par

print("=== AN√ÅLISES B√ÅSICAS ===")
print(f"Positivo: {eh_positivo}")
print(f"Negativo: {eh_negativo}")  
print(f"Zero: {eh_zero}")
print(f"Par: {eh_par}")
print(f"√çmpar: {eh_impar}")

# M√∫ltiplos
multiplo_2 = numero % 2 == 0
multiplo_3 = numero % 3 == 0
multiplo_5 = numero % 5 == 0
multiplo_10 = numero % 10 == 0

print(f"\n=== M√öLTIPLOS ===")
print(f"M√∫ltiplo de 2: {multiplo_2}")
print(f"M√∫ltiplo de 3: {multiplo_3}")
print(f"M√∫ltiplo de 5: {multiplo_5}")
print(f"M√∫ltiplo de 10: {multiplo_10}")

# Combina√ß√µes l√≥gicas
fizz = multiplo_3 and not multiplo_5
buzz = multiplo_5 and not multiplo_3  
fizzbuzz = multiplo_3 and multiplo_5
especial = fizz or buzz or fizzbuzz

print(f"\n=== CLASSIFICA√á√ÉO ESPECIAL ===")
print(f"Fizz (m√∫ltiplo s√≥ de 3): {fizz}")
print(f"Buzz (m√∫ltiplo s√≥ de 5): {buzz}")
print(f"FizzBuzz (m√∫ltiplo de 3 e 5): {fizzbuzz}")
print(f"N√∫mero especial: {especial}")

# Faixas
pequeno = numero < 100
medio = 100 <= numero < 1000
grande = numero >= 1000

print(f"\n=== CLASSIFICA√á√ÉO POR TAMANHO ===")
print(f"Pequeno (<100): {pequeno}")
print(f"M√©dio (100-999): {medio}")
print(f"Grande (>=1000): {grande}")

print("\n" + "-" * 60)

# ==========================================
# EXEMPLO 8: CALCULADORA COM VALIDA√á√ÉO
# ==========================================
print("\nEXEMPLO 8: Calculadora com Valida√ß√£o")
print("=" * 45)

# Simulando entradas
num1, num2 = 12, 5
operacao = "*"

print(f"Opera√ß√£o: {num1} {operacao} {num2}")
print()

# Valida√ß√µes
operacoes_validas = ['+', '-', '*', '/', '//', '%', '**']
operacao_ok = operacao in operacoes_validas
divisao_por_zero = (operacao in ['/', '//', '%']) and num2 == 0

print("=== VALIDA√á√ïES ===")
print(f"Opera√ß√£o v√°lida: {operacao_ok}")
print(f"Divis√£o por zero: {divisao_por_zero}")

pode_calcular = operacao_ok and not divisao_por_zero
print(f"Pode calcular: {pode_calcular}")

if pode_calcular:
    # Executando opera√ß√£o
    if operacao == '+':
        resultado = num1 + num2
    elif operacao == '-':
        resultado = num1 - num2  
    elif operacao == '*':
        resultado = num1 * num2
    elif operacao == '/':
        resultado = num1 / num2
    elif operacao == '//':
        resultado = num1 // num2
    elif operacao == '%':
        resultado = num1 % num2
    elif operacao == '**':
        resultado = num1 ** num2
    
    print(f"\n=== RESULTADO ===")
    print(f"{num1} {operacao} {num2} = {resultado}")
    
    # An√°lise do resultado
    if isinstance(resultado, int):
        eh_par = resultado % 2 == 0
        print(f"Resultado √© par: {eh_par}")
    
    resultado_positivo = resultado > 0
    resultado_inteiro = resultado == int(resultado)
    
    print(f"Resultado positivo: {resultado_positivo}")
    print(f"Resultado inteiro: {resultado_inteiro}")
    
else:
    print("\n‚ùå N√£o foi poss√≠vel calcular!")

print("\n" + "=" * 60)
print("üéØ TODOS OS EXEMPLOS EXECUTADOS!")
print("Conceitos demonstrados:")
print("‚úÖ Operadores aritm√©ticos: +, -, *, /, //, %, **")
print("‚úÖ Operadores de compara√ß√£o: ==, !=, <, >, <=, >=")
print("‚úÖ Operadores l√≥gicos: and, or, not") 
print("‚úÖ Preced√™ncia e par√™nteses")
print("‚úÖ Tabelas-verdade")
print("‚úÖ Valida√ß√µes pr√°ticas")
print("‚úÖ An√°lises num√©ricas")
print("=" * 60)